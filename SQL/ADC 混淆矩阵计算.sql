-- 统计每家厂商的图片数量是否正确
SELECT T.VENDOR, T.OPER_CODE, COUNT(*)
  FROM PREDICT_LABEL T
 GROUP BY T.VENDOR, T.OPER_CODE 
 ORDER BY t.vendor , t.oper_code ;
 
SELECT /*t1.vendor , T.OPER_CODE ,*/
 T.ORIGIN_IMG,
 T.TARGET_IMG,
 UPPER(T.TRUE_LABEL) AS "真实类别",
 UPPER(T1.PRE_LABEL) AS "预测类别"
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L490J'
   AND T1.VENDOR = 'ZKCD'
 
 
-- 中祥英 GATE 混淆矩阵
SELECT /*t1.vendor , T.OPER_CODE ,*/
/* T.ORIGIN_IMG,
 T.TARGET_IMG,*/
 DECODE(UPPER(T.TRUE_LABEL),'ACSR2','ACSR2','ACSR3','ACSR3','NGSE3','NGSE3','NGSP1','NGSP1','OTHERS') AS REAL,
 UPPER(T1.PRE_LABEL) AS prdict ,
 COUNT(*) AS nums 
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L490J'
   AND T1.VENDOR = 'ZXY' 
   GROUP BY DECODE(UPPER(T.TRUE_LABEL),'ACSR2','ACSR2','ACSR3','ACSR3','NGSE3','NGSE3','NGSP1','NGSP1','OTHERS') , UPPER(T1.PRE_LABEL) 
   ORDER BY REAL , prdict ;

-- 数之联 GATE 混淆矩阵
SELECT /*t1.vendor , T.OPER_CODE ,*/
/* T.ORIGIN_IMG,
 T.TARGET_IMG,*/
 DECODE(UPPER(T.TRUE_LABEL),'ACSR2','ACSR2','ACSR3','ACSR3','NGSE3','NGSE3','NGSP1','NGSP1','OTHERS') AS REAL,
 UPPER(T1.PRE_LABEL) AS prdict ,
 COUNT(*) AS nums 
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L490J'
   AND T1.VENDOR = 'SZL' 
   GROUP BY DECODE(UPPER(T.TRUE_LABEL),'ACSR2','ACSR2','ACSR3','ACSR3','NGSE3','NGSE3','NGSP1','NGSP1','OTHERS') , UPPER(T1.PRE_LABEL) 
   ORDER BY REAL , prdict ;  
 

-- 中科创达 GATE 混淆矩阵
SELECT /*t1.vendor , T.OPER_CODE ,*/
/* T.ORIGIN_IMG,
 T.TARGET_IMG,*/
 DECODE(UPPER(T.TRUE_LABEL),'ACSR2','ACSR2','ACSR3','ACSR3','NGSE3','NGSE3','NGSP1','NGSP1','OTHERS') AS REAL,
 UPPER(T1.PRE_LABEL) AS prdict ,
 COUNT(*) AS nums 
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L490J'
   AND T1.VENDOR = 'ZKCD' 
   GROUP BY DECODE(UPPER(T.TRUE_LABEL),'ACSR2','ACSR2','ACSR3','ACSR3','NGSE3','NGSE3','NGSP1','NGSP1','OTHERS') , UPPER(T1.PRE_LABEL) 
   ORDER BY REAL , prdict ;   
   
   -- 中祥英 SD 混淆矩阵
SELECT /*t1.vendor , T.OPER_CODE ,*/
/* T.ORIGIN_IMG,
 T.TARGET_IMG,*/
 DECODE(UPPER(T.TRUE_LABEL),'ILPNH','ILPNH','SDER1','SDER1','SDSP1','SDSP1','SDSR5','SDSR5','OTHERS') AS REAL,
 UPPER(T1.PRE_LABEL) AS prdict ,
 COUNT(*) AS nums 
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L691J'
   AND T1.VENDOR = 'ZXY' 
   GROUP BY DECODE(UPPER(T.TRUE_LABEL),'ILPNH','ILPNH','SDER1','SDER1','SDSP1','SDSP1','SDSR5','SDSR5','OTHERS') , UPPER(T1.PRE_LABEL) 
   ORDER BY REAL , prdict ;

   -- 数之联 SD 混淆矩阵
SELECT /*t1.vendor , T.OPER_CODE ,*/
/* T.ORIGIN_IMG,
 T.TARGET_IMG,*/
 DECODE(UPPER(T.TRUE_LABEL),'ILPNH','ILPNH','SDER1','SDER1','SDSP1','SDSP1','SDSR5','SDSR5','OTHERS') AS REAL,
 UPPER(T1.PRE_LABEL) AS prdict ,
 COUNT(*) AS nums 
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L691J'
   AND T1.VENDOR = 'SZL' 
   GROUP BY DECODE(UPPER(T.TRUE_LABEL),'ILPNH','ILPNH','SDER1','SDER1','SDSP1','SDSP1','SDSR5','SDSR5','OTHERS') , UPPER(T1.PRE_LABEL) 
   ORDER BY REAL , prdict ;


   -- 数之联 SD 混淆矩阵
SELECT /*t1.vendor , T.OPER_CODE ,*/
/* T.ORIGIN_IMG,
 T.TARGET_IMG,*/
 DECODE(UPPER(T.TRUE_LABEL),'ILPNH','ILPNH','SDER1','SDER1','SDSP1','SDSP1','SDSR5','SDSR5','OTHERS') AS REAL,
 UPPER(T1.PRE_LABEL) AS prdict ,
 COUNT(*) AS nums 
  FROM REAL_LABEL T
  LEFT JOIN PREDICT_LABEL T1
    ON (T.OPER_CODE = T1.OPER_CODE AND T.TARGET_IMG = T1.TARGET_IMG)
 WHERE T.OPER_CODE = 'L691J'
   AND T1.VENDOR = 'ZKCD' 
   GROUP BY DECODE(UPPER(T.TRUE_LABEL),'ILPNH','ILPNH','SDER1','SDER1','SDSP1','SDSP1','SDSR5','SDSR5','OTHERS') , UPPER(T1.PRE_LABEL) 
   ORDER BY REAL , prdict ;
